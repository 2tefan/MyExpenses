import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'com.android.application'

android {
    compileSdkVersion project.compileSdkVersion
    buildToolsVersion project.buildToolsVersion

    defaultConfig {
        applicationId "org.totschnig.myexpenses"
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
        }
        versionCode 220
        versionName '2.5.2'

        testApplicationId "org.totschnig.myexpenses.test"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"

        buildConfigField "String", "PLATTFORM", "\"Android\""
    }
    /*signingConfigs {
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }*/
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
            //signingConfig signingConfigs.release

        }
    }

    lintOptions {
        disable 'InvalidPackage', 'MissingQuantity', 'MissingTranslation', 'ImpliedQuantity'
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
    //testBuildType "release"
}

dependencies {
    compile project(':StickyListHeaders:library')
    compile project(':MPAndroidChart:MPChartLib')
    compile 'com.android.support:appcompat-v7:23.0.1'
    compile 'com.android.support:support-v4:23.0.1'
    compile 'com.android.support:recyclerview-v7:23.0.1'
    compile 'com.android.support:design:23.0.1'
    compile 'com.itextpdf:itextpdf:5.5.2'
    compile group: 'com.google.guava', name: 'guava', version: '18.0'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'org.apache.commons:commons-csv:1.1'
    compile 'com.commonsware.cwac:wakeful:1.0.+'
    androidTestCompile 'com.jayway.android.robotium:robotium-solo:5.2.1'
    testCompile 'junit:junit:4.12'
}
def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd-HHmm')
    return formattedDate
}
task copyTask(type: Copy) { //why doesn't Gradle allow to force overwrite?
    from 'template/app.properties'
    into 'src/main/res/raw'
    filter(ReplaceTokens, tokens: ["build.date": getDate()])
}
task removeTask(type: Delete) {
    delete 'src/main/res/raw/app.properties'
}
project.afterEvaluate{
    compileDebugJava.dependsOn("copyTask")
    compileReleaseJava.dependsOn("copyTask")
    clean.dependsOn("removeTask")
}
